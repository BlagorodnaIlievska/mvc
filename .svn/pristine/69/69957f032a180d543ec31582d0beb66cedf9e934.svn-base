<div xmlns="http://www.w3.org/1999/html">
    <?php
    //$url = json_decode(file_get_contents("http://api.ipinfodb.com/v3/ip-country/?key=f39914ddaa0be7320b83a47a13f6ff2f309a1d7628f12b3e2d3fce2afb89cc3c&ip=".$_SERVER['REMOTE_ADDR']."&format=json"));
//print the array to see the fields if you wish.
//print_r($url);
    ?>
    <br/><br/>
    <div>
   <?php //echo $url->countryCode;
        //echo  "- " .$url->countryName;
        ?>
    </div>
</div>



<?php
//if($url->countryCode != "MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF" && $url->countryCode != "MK")
//    $href = "";
//else
//    $href = "";
?>

<script type="text/javascript">

    function geolocate(timezone, cityPrecision, objectVar) {

        var api = (cityPrecision) ? "ip-city" : "ip-country";
        var domain = 'api.ipinfodb.com';
        var url = "http://" + domain + "/v3/" + api + "/?key=f39914ddaa0be7320b83a47a13f6ff2f309a1d7628f12b3e2d3fce2afb89cc3c&format=json" + "&callback=" + objectVar + ".setGeoCookie";
        var geodata;
        var callbackFunc;
        var JSON = JSON || {};

        // implement JSON.stringify serialization
        JSON.stringify = JSON.stringify || function (obj) {
            var t = typeof (obj);
            if (t != "object" || obj === null) {
                // simple data type
                if (t == "string") obj = '"'+obj+'"';
                return String(obj);
            } else {
                // recurse array or object
                var n, v, json = [], arr = (obj && obj.constructor == Array);
                for (n in obj) {
                    v = obj[n]; t = typeof(v);
                    if (t == "string") v = '"'+v+'"';
                    else if (t == "object" && v !== null) v = JSON.stringify(v);
                    json.push((arr ? "" : '"' + n + '":') + String(v));
                }
                return (arr ? "[" : "{") + String(json) + (arr ? "]" : "}");
            }
        };

        // implement JSON.parse de-serialization
        JSON.parse = JSON.parse || function (str) {
            if (str === "") str = '""';
            eval("var p=" + str + ";");
            return p;
        };

        //Check if cookie already exist. If not, query IPInfoDB
        this.checkcookie = function(callback) {
            geolocationCookie = getCookie('geolocation');
            callbackFunc = callback;
            if (!geolocationCookie) {
                getGeolocation();
            } else {
                geodata = JSON.parse(geolocationCookie);
                callbackFunc();
            }
        }

        //API callback function that sets the cookie with the serialized JSON answer
        this.setGeoCookie = function(answer) {
            if (answer['statusCode'] == 'OK') {
                JSONString = JSON.stringify(answer);
                setCookie('geolocation', JSONString, 365);
                geodata = answer;
                callbackFunc();
            }
        }

        //Return a geolocation field
        this.getField = function(field) {
            try {
                return geodata[field];
            } catch(err) {}
        }

        //Request to IPInfoDB
        function getGeolocation() {
            try {
                script = document.createElement('script');
                script.src = url;
                document.body.appendChild(script);
            } catch(err) {}
        }

        //Set the cookie
        function setCookie(c_name, value, expire) {
            var exdate=new Date();
            exdate.setDate(exdate.getDate()+expire);
            document.cookie = c_name+ "=" +escape(value) + ((expire==null) ? "" : ";expires="+exdate.toGMTString());
        }

        //Get the cookie content
        function getCookie(c_name) {
            if (document.cookie.length > 0 ) {
                c_start=document.cookie.indexOf(c_name + "=");
                if (c_start != -1){
                    c_start=c_start + c_name.length+1;
                    c_end=document.cookie.indexOf(";",c_start);
                    if (c_end == -1) {
                        c_end=document.cookie.length;
                    }
                    return unescape(document.cookie.substring(c_start,c_end));
                }
            }
            return '';
        }
    }

    //function geolocate(timezone, cityPrecision, objectVar).
    //If you rename your object name, you must rename 'visitorGeolocation' in the function
    var visitorGeolocation = new geolocate(false, true, 'visitorGeolocation');

    //Check for cookie and run a callback function to execute after geolocation is read either from cookie or IPInfoDB API
    var callback = function(){
        console.log('Visitor country code : ' + visitorGeolocation.getField('countryCode'))
    };
    visitorGeolocation.checkcookie(callback);
</script>